type Profile {
  PK: String
  name: String
  phoneNumber: String
  photo: String
  birthDay: String
  position: String
  church: String!
  level: String
}

# 사용자의 교회
type UserChurch {
  name: String
}

type Code {
  id: ID!
  verifyNumber: String!
  level: String!
  createdAt: String!
}

input CreateUserIput {
  name: String
  phoneNumber: String
  birthDay: String
  photo: String
  position: String
  church: String
}

input UpdateUserInfo {
  name: String
  phoneNumber: String
  photo: String
  position: String
}

input GetProfilesInput {
  users: [String]
}

input VerifyCodeInput {
  verifyNumber: Int
}

input CreateCodeInput {
  level: String
}

type OnboardingStep {
  step: String
}

type Query {
  getProfile: Profile
  getChurchUsers: [Profile] 
  getUserChurch: UserChurch
  getOnboardingStep: OnboardingStep
}

type Mutation {
  createProfile(input: CreateUserIput): Profile
  updateProfile(input: UpdateUserInfo): Profile
  verifyCode(input: VerifyCodeInput): Profile
  createCode(input: CreateCodeInput): Code
}
