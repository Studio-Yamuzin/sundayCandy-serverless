type RoomInfo {
  roomId: ID!
  users: [Profile]!
  roomName: String
  roomType: String!
  recentMessage: Message
  unReadCount: Int
  photo: String
} # 유저별로 각각 가지는 방의 정보도 이 스킴에 담을 예정

type Message {
  roomId: ID!
  message: String
  photo: String
  timeStamp: String
  writer: String # user PK
  type: String
}

input CreateRoomInput {
  users: [String] # user PKs
  name: String
  photoUri: String
}

input SendMessageInput {
  message: String
  photo: String
}

input GetRecentMessageInput {
  roomId: String!
}

input GetRoomMessagesInput {
  roomId: String!
}

type Query {
  getMyChatRooms: [RoomInfo]
  getRoomMessages(input: GetRoomMessagesInput): [Message]
  getRecentMessage(input: GetRecentMessageInput): Message
}

type Mutation {
  createGeneralRoom(input: CreateRoomInput): RoomInfo
  sendMessage(roomId: ID!, input: SendMessageInput): Message
}

type Subscription {
  sentMessage(roomId: ID!): Message
    @aws_subscribe(mutations: ["sendMessage"])
}
