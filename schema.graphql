type Bible {
  PK: ID!
  SK: ID!
  title: String!
  chapter: Int!
  verse: Int!
  isLast: Boolean
  text: String!
}

type Bookmark {
  title: String
  chapter: Int
  date: String
}

input GetBibleByChapterInput {
  title: String!
  chapter: Int!
}

input GetBibleByVerseInput {
  title: String!
  chapter: Int!
  verse: Int!
}

input GetBibleByVerseListInput {
  title: String!
  chapter: Int!
  verse: [Int]!
}

input CreateBookmarkInput {
  title: String!
  chapter: Int!
}

input DeleteBookmarkInput {
  title: String!
  chapter: Int!
}

input GetMyBookmarkByChapterInput {
  title: String!
  chapter: Int!
}

type Query {
  getBibleByChapter(input: GetBibleByChapterInput!): [Bible]
  getBibleByVerse(input: GetBibleByVerseInput!): Bible
  getBibleByVerseList(input: GetBibleByVerseInput!): [Bible]
  getMyBookmarks: [Bookmark]
  getMyBookmarkByChapter(input: GetMyBookmarkByChapterInput): Bookmark
  getMyChatRooms: [RoomInfo]
  getRoomMessages(input: GetRoomMessagesInput): [Message]
  getRecentMessage(input: GetRecentMessageInput): Message
  getChurch(chuchId: ID!): Church
  getContemplationAll: [Contemplation]
  getProfile: Profile
  getChurchUsers: [Profile]
  getUserChurch: UserChurch
  getOnboardingStep: OnboardingStep
}

type Mutation {
  createBookmark(input: CreateBookmarkInput): Bookmark
  deleteBookmark(input: DeleteBookmarkInput): Bookmark
  createGeneralRoom(input: CreateRoomInput): RoomInfo
  sendMessage(roomId: ID!, input: SendMessageInput): Message
  createChurch(input: CreateChurchInput): Church
  updateChurch(input: UpdateChurchInput): Church
  createContemplation(input: CreateContemplationInput): Contemplation
  createProfile(input: CreateUserIput): Profile
  updateProfile(input: UpdateUserInfo): Profile
}

type RoomInfo {
  roomId: ID!
  users: [String]!
  roomName: String
  roomType: String!
  recentMessage: String
  timeStamp: String
}

type Message {
  roomId: ID!
  message: String!
  photo: String
  timeStamp: String
  writer: String
  type: String!
}

input CreateRoomInput {
  users: [String]
  name: String
}

input SendMessageInput {
  message: String!
  photo: String
}

input GetRecentMessageInput {
  roomId: String!
}

input GetRoomMessagesInput {
  roomId: String!
}

type Subscription {
  sentMessage(roomId: ID!): Message @aws_subscribe(mutations: ["sendMessage"])
}

type Church {
  name: String!
  description: String
  address: String!
  phoneNumber: String!
  photo: String
  type: String
}

input CreateChurchInput {
  name: String!
  description: String
  address: String!
  phoneNumber: String!
  photo: String
  type: String
}

input UpdateChurchInput {
  name: String!
  description: String
  address: String!
  phoneNumber: String!
  photo: String
  type: String
}

type Contemplation {
  references: [String]
  content: String
  range: String
  date: String!
  profile: Profile
}

input CreateContemplationInput {
  references: [String]
  content: String!
  range: String!
}

type Profile {
  PK: String
  name: String
  phoneNumber: String
  photo: String
  birthDay: String
  position: String
  church: String!
}

type UserChurch {
  name: String
}

input CreateUserIput {
  name: String
  phoneNumber: String
  birthDay: String
  photo: String
  position: String
  church: String
}

input UpdateUserInfo {
  name: String
  phoneNumber: String
  photo: String
  position: String
}

enum OnboardingStepType {
  onboarding
  end
}

type OnboardingStep {
  step: OnboardingStepType
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
